name: CI CD Pipeline

on:
  workflow_dispatch:

  # push:
  #   tags:
  #     - "v*.*.*"
  #   branches:
  #     - main

jobs:
  test:
    name: Unit Testing Stage
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./backend-service
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: ">=1.20"
      - name: Download Module
        run: go mod download
      - name: Run unit-testing
        run: go test ./internal/repository -v
  build:
    name: Build Stage
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        shell: bash
        working-directory: ./backend-service
    steps:
      - name: Get the version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/v*.*.* ]]; then
            echo "Version: ${GITHUB_REF#refs/tags/v}"
            echo "VERSION=v${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            echo "Version: latest"
            echo "VERSION=latest" >> $GITHUB_ENV
          fi
      - name: Checkout Repo
        id: checkout
        uses: actions/checkout@v4
      - name: Setup Golang
        id: setup-go
        uses: actions/setup-go@v3
        with:
          go-version: ">=1.20"
      - name: Download Module
        id: download
        run: go mod download
      - name: Build
        id: build
        run: go build -o ./bin/main ./cmd/main.go
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        id: login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/go-rest-api:${{ env.VERSION }}
  deploy:
    name: Deploying Stage
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show
      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7
